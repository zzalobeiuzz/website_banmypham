import lottie from "lottie-web";
import React, { useEffect, useRef, useState } from "react";
import successAnimation from "./Success.json";
import "./components.scss";

// üîî Component th√¥ng b√°o (th√†nh c√¥ng ho·∫∑c l·ªói)
const Notification = ({ message, type = "success", onClose, onConfirm }) => {
  const animationRef = useRef(null);
  const [animationCompleted, setAnimationCompleted] = useState(false);

  // ‚úÖ Ch·∫°y animation th√†nh c√¥ng b·∫±ng Lottie
  useEffect(() => {
    if (type === "success" && animationRef.current) {
      const anim = lottie.loadAnimation({
        container: animationRef.current,
        renderer: "svg",
        loop: false,
        autoplay: true,
        animationData: successAnimation,
      });

      anim.addEventListener("complete", () => {
        setAnimationCompleted(true); // üëâ Ch·ªâ hi·ªán n√∫t khi ch·∫°y xong
      });

      return () => {
        anim.destroy(); // üî• D·ªçn d·∫πp khi component b·ªã hu·ª∑
      };
    }
  }, [type]);

  return (
    <div className="notification">
      {type === "success" ? (
        // ‚úÖ Giao di·ªán khi th√†nh c√¥ng
        <div className="notification__overlay">
          <div className="notification__success-box">
            <div
              className="notification__lottie-animation"
              ref={animationRef}
              style={{ width: 180, height: 180 }}
            />
            {/* üßæ N·ªôi dung sau khi animation xong */}
            <div
              className={`notification__content ${
                animationCompleted ? "visible" : "hidden"
              }`}
            >
              <p className="notification__message">{message}</p>
              <p className="notification__question">
                B·∫°n c√≥ mu·ªën th√™m s·∫£n ph·∫©m kh√°c kh√¥ng?
              </p>
              <div className="notification__actions">
                <button
                  className="notification__close-btn notification__close-btn--secondary"
                  onClick={onConfirm} // üëâ Kh√¥ng => quay v·ªÅ
                >
                  Kh√¥ng
                </button>
                <button
                  className="notification__close-btn"
                  onClick={onClose} // üëâ C√≥ => reset form
                >
                  C√≥
                </button>
              </div>
            </div>
          </div>
        </div>
      ) : (
        // ‚ùå Giao di·ªán th√¥ng b√°o l·ªói ho·∫∑c kh√°c
        <div className={`notification__popup ${type}`}>
          <span>{message}</span>
          <button className="notification__popup-close" onClick={onClose}>
            √ó
          </button>
        </div>
      )}
    </div>
  );
};


export default Notification;
