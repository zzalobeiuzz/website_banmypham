import React, { useEffect, useState } from "react";

const VerifyCodeForm = ({ email, onSubmit, onResend, goBack }) => {
  const [code, setCode] = useState("");
  const [countdown, setCountdown] = useState(120); // 2 ph√∫t
  const [resending, setResending] = useState(false);
  const [error, setError] = useState("");

  // ‚è±Ô∏è ƒê·∫øm ng∆∞·ª£c
  useEffect(() => {
    if (countdown <= 0) return;
    const timer = setInterval(() => setCountdown((prev) => prev - 1), 1000);
    return () => clearInterval(timer);
  }, [countdown]);

  // üì© G·ª≠i l·∫°i m√£
  const handleResend = async () => {
    setResending(true);
    try {
      await onResend();
      setCountdown(120); // Reset l·∫°i th·ªùi gian ƒë·∫øm ng∆∞·ª£c
      setError("");
    } catch (err) {
      setError("‚ùå Kh√¥ng th·ªÉ g·ª≠i l·∫°i m√£.");
    }
    setResending(false);
  };

  // ‚úÖ G·ª≠i m√£ x√°c th·ª±c
  const handleSubmit = async (e) => {
    e.preventDefault();
    if (code.length !== 6) {
      return setError("üî¥ M√£ x√°c th·ª±c ph·∫£i g·ªìm ƒë√∫ng 6 ch·ªØ s·ªë.");
    }
    setError("");
    await onSubmit(code);
  };

  return (
    <section className="verify-section">
      <form onSubmit={handleSubmit}>
        <div className="form-outline mb-3">
          <input
            type="text"
            maxLength={6}
            className="form-control text-center"
            placeholder="Nh·∫≠p m√£ x√°c th·ª±c (6 s·ªë)"
            value={code}
            onChange={(e) => setCode(e.target.value)}
            required
          />
        </div>

        {error && <p className="text-danger mb-2">‚ùå {error}</p>}

        <div className="mb-3 text-end">
          <button
            type="button"
            onClick={handleResend}
            disabled={countdown > 0 || resending}
            className="btn btn-link text-decoration-none p-0"
          >
            {countdown > 0
              ? `G·ª≠i l·∫°i m√£ sau ${countdown}s`
              : resending
              ? "ƒêang g·ª≠i l·∫°i..."
              : "üîÅ G·ª≠i l·∫°i m√£"}
          </button>
        </div>

        <div className="d-flex justify-content-between">
          <button
            type="button"
            onClick={goBack}
            className="btn btn-secondary"
          >
            ‚¨Ö Quay l·∫°i
          </button>
          <button
            type="submit"
            className="btn btn-success"
          >
            X√°c th·ª±c m√£
          </button>
        </div>
      </form>
    </section>
  );
};

export default VerifyCodeForm;
