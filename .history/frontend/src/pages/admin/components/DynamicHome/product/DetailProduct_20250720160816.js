// üß† Import th∆∞ vi·ªán React v√† hook c·∫ßn thi·∫øt
import lottie from "lottie-web";
import React, { useEffect, useRef, useState } from "react";
import { useParams } from "react-router-dom"; // üîÑ L·∫•y param t·ª´ URL
import { API_BASE, UPLOAD_BASE } from "../../../../../constants"; // üåê URL base API server
import useHttp from "../../../../../hooks/useHttp"; // üõ†Ô∏è Custom hook ƒë·ªÉ g·ªçi API

// üì¶ Component hi·ªÉn th·ªã chi ti·∫øt s·∫£n ph·∫©m
const ProductDetail = () => {
  const { id } = useParams(); // üîé L·∫•y id t·ª´ URL
  const { request } = useHttp(); // API hook
  const [product, setProduct] = useState(null);

  const loadingRef = useRef(); // üìç DOM ref cho Lottie

  // üéûÔ∏è Load animation Lottie khi ch∆∞a c√≥ s·∫£n ph·∫©m
  useEffect(() => {
    if (!product && loadingRef.current) {
      const anim = lottie.loadAnimation({
        container: loadingRef.current,
        renderer: "svg",
        loop: true,
        autoplay: true,
        path: "/animations/Trail loading.json", // üîÅ ƒê∆∞·ªùng d·∫´n t∆∞∆°ng ƒë·ªëi trong /public
      });

      return () => anim.destroy(); // üí• D·ªçn d·∫πp khi unmount
    }
  }, [product]);

  // üöÄ G·ªçi API l·∫•y s·∫£n ph·∫©m
  useEffect(() => {
    const fetchProduct = async () => {
      try {
        const res = await request(
          "GET",
          `${API_BASE}/api/admin/products/productDetail?code=${id}`
        );
        setProduct(res.data);
        console.log(res.data)
        // console.log(res.data)
      } catch (error) {
        console.error("L·ªói khi t·∫£i chi ti·∫øt s·∫£n ph·∫©m:", error);
      }
    };
    fetchProduct();
  }, [id, request]);

  // üîÑ N·∫øu ch∆∞a c√≥ d·ªØ li·ªáu ‚Üí render animation
  if (!product) {
    return (
      <div className="product-detail__loading">
        <div ref={loadingRef} style={{ width: 250, height: 250, margin: "0 auto" }} />
        <p style={{ textAlign: "center", marginTop: 12 }}>ƒêang t·∫£i th√¥ng tin s·∫£n ph·∫©m...</p>
      </div>
    );
  }

  // ‚úÖ N·∫øu c√≥ d·ªØ li·ªáu ‚Üí render s·∫£n ph·∫©m
  return (
    <div className="product-detail__wrapper">
      <div className="product-detail__image">
        <img src={`${UPLOAD_BASE}/${product.Image}`} alt={product.ProductName} />
      </div>

      <div className="product-detail__info">
        <h2>{product.ProductName}</h2>
        <p>
          <strong>Gi√°:</strong>{" "}
          {product.Price.toLocaleString("vi-VN", {
            style: "currency",
            currency: "VND",
          })}
        </p>
        <p>
          <strong>T·ªìn kho:</strong> {product.StockQuantity}
        </p>
        <p>
          <strong>Danh m·ª•c:</strong> {product.CategoryName}
        </p>
      </div>
    </div>
  );
};

export default ProductDetail;
