// üß† Import th∆∞ vi·ªán v√† hook c·∫ßn thi·∫øt
import lottie from "lottie-web"; // üéûÔ∏è Th∆∞ vi·ªán ƒë·ªÉ hi·ªÉn th·ªã animation Lottie
import React, { useEffect, useRef, useState } from "react"; // üì¶ React hooks
import { useParams } from "react-router-dom"; // üîÅ L·∫•y params t·ª´ URL
import { API_BASE, UPLOAD_BASE } from "../../../../../constants"; // üîó C√°c h·∫±ng s·ªë URL API v√† upload
import useHttp from "../../../../../hooks/useHttp"; // üì° Custom hook x·ª≠ l√Ω request
import "./style.scss"; // üé® SCSS ri√™ng cho component

const ProductDetail = () => {
  const { id } = useParams(); // üìå L·∫•y m√£ s·∫£n ph·∫©m t·ª´ URL
  const { request } = useHttp(); // üîß D√πng custom hook ƒë·ªÉ g·ªçi API

  const loadingRef = useRef(); // üîÅ Ref DOM d√πng cho animation Lottie
  const [product, setProduct] = useState(null); // üß† Tr·∫°ng th√°i d·ªØ li·ªáu s·∫£n ph·∫©m
  const [loading, setLoading] = useState(true); // ‚åõ Tr·∫°ng th√°i loading
  const [showContent, setShowContent] = useState(false); // üëÅÔ∏è Tr·∫°ng th√°i hi·ªÉn th·ªã n·ªôi dung

  // üõéÔ∏è G·ªçi API khi component mount
  useEffect(() => {
    const fetchProduct = async () => {
      try {
        const res = await request(
          "GET",
          `${API_BASE}/api/admin/products/productDetail?code=${id}`
        );
        setProduct(res.data);
        console.log("üîç Product:", res.data);

        // üïí Delay 1.5s ƒë·ªÉ ƒë·∫£m b·∫£o animation hi·ªÉn th·ªã tr∆∞·ªõc
        setTimeout(() => {
          setShowContent(true);
          setLoading(false);
        }, 1500);
      } catch (err) {
        console.error("‚ùå Kh√¥ng l·∫•y ƒë∆∞·ª£c chi ti·∫øt s·∫£n ph·∫©m:", err);
        setLoading(false);
      }
    };

    fetchProduct();
  }, [id, request]);

  // üåà Ch·∫°y animation n·∫øu ƒëang loading
  useEffect(() => {
    if (loadingRef.current && loading) {
      const anim = lottie.loadAnimation({
        container: loadingRef.current,
        renderer: "svg",
        loop: true,
        autoplay: true,
        path: "/animations/Trail loading.json",
      });

      return () => anim.destroy(); // üßπ Cleanup khi unmount ho·∫∑c loading xong
    }
  }, [loading]);

  // üîí N·∫øu ch∆∞a c√≥ product ho·∫∑c ƒëang loading th√¨ render animation
  if (!product?.ProductName || !showContent) {
    return (
      <div className="product-detail__loading">
        <div
          ref={loadingRef}
          className="product-detail__lottie"
        />
        <p>ƒêang t·∫£i th√¥ng tin s·∫£n ph·∫©m...</p>
      </div>
    );
  }

  // ‚úÖ ƒê·∫øn ƒë√¢y ch·∫Øc ch·∫Øn ƒë√£ c√≥ product => x·ª≠ l√Ω ·∫£nh
  const imageUrl = product.Image?.startsWith("http")
    ? product.Image
    : `${UPLOAD_BASE}/pictures/${product.Image || "default.jpg"}`;

  return (
    <div className="product-detail__container">
      <div className="product-detail__wrapper show">
        {/* H√¨nh ·∫£nh */}
        <div className="product-detail__image">
          <img
            src={imageUrl}
            alt={product?.ProductName || "Kh√¥ng c√≥ t√™n"}
            onError={(e) => {
              e.target.onerror = null;
              e.target.src = "/images/placeholder.png";
            }}
          />
        </div>

        {/* Th√¥ng tin s·∫£n ph·∫©m */}
        <div className="product-detail__info">
          <h2>{product?.ProductName}</h2>
          <p>
            <strong>Gi√°:</strong>{" "}
            {product?.Price?.toLocaleString("vi-VN", {
              style: "currency",
              currency: "VND",
            })}
          </p>
          <p>
            <strong>T·ªìn kho:</strong> {product?.StockQuantity}
          </p>
          <p>
            <strong>Danh m·ª•c:</strong> {product?.CategoryName}
          </p>
        </div>
      </div>
    </div>
  );
};

export default ProductDetail;
